type House {
  _id: ID!
  flatNo: Int!
}

input HouseInput {
  no: Int!
}

type User {
  _id: ID!
  firstName: String
  lastName: String
  email: String
  phone: String
  role: String
  position: String
  house: House
}

input UserInput {
  firstName: String!
  lastName: String!
  email: String
  phone: String!
  role: String!
  position: String
  houseId: String
}

input UserUpdateInput {
  _id: String!
  firstName: String
  lastName: String
  email: String
  phone: String
  role: String
  position: String
  houseId: String
}

type RootQuery {
  houses: [House!]!
  vacants(role: String): [House!]!
  users(role: String): [User!]!
}

type RootMutation {
  createHouse(houseInput: HouseInput): House
  createUser(userInput: UserInput): String
  updateUser(userInput: UserUpdateInput): String
  deleteUser(userId: String): Int
  deleteAllUsers: Int
  deleteHouse(id: String): Int
}

schema {
  query: RootQuery
  mutation: RootMutation
}
